{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clair\\\\Desktop\\\\cours\\\\l3-informatique\\\\printemps\\\\Douapolis\\\\lifprojet\\\\douapolis\\\\src\\\\Parametres.js\",\n  _s = $RefreshSig$();\nimport { Container, Button, Accordion, Form } from \"react-bootstrap\";\nimport { useState, React, useEffect } from 'react';\nimport { useParams, useNavigate } from \"react-router\";\nimport Navigation from \"./Navigation\";\nimport { getUser, logout, login } from \"./testAuth/AuthApi\";\n\n//page de profil d'un utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profil() {\n  _s();\n  //formulaire pour mon useEffect pour afficher le pseudo dynamiquement\n  const [form, setForm] = useState({\n    pseudo: \"\",\n    mdp: \"\"\n  });\n  //formulaire qui se rempli lors du changement du mdp ou du pseudo\n  const [newForm, setNewForm] = useState({\n    pseudo: \"\",\n    mdp: \"\"\n  });\n  //mes constantes et leurs setteurs appelée dans les inputs (type + remplissage avec onChange)\n  const [oldPass, setOldPass] = useState('');\n  const [newPass, setNewPass] = useState('');\n  const [verifPass, setVerifPass] = useState('');\n  const [newPseudo, setNewPseudo] = useState('');\n  //constante de navigation\n  const navigate = useNavigate();\n  //constantes pour l'alerte de confirmation\n\n  //fonction de changement de pseudo\n  async function modifPseudo(event) {\n    const pseudo = getUser();\n    const response = await fetch(`http://localhost:5000/users/${pseudo}`);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const users = await response.json();\n    if (!users) {\n      window.alert(`le compte ${pseudo} est introuvable`);\n      return;\n    }\n    if (newPseudo !== \"\") {\n      //si tout les champs sont pleins\n\n      if (newPseudo !== users.pseudo) {\n        //si le mdp tapé et le mdp actuel du profil sont equivalents\n        const newResponse = await fetch(`http://localhost:5000/users/${newPseudo}`);\n        if (!newResponse.ok) {\n          const message = `An error has occurred: ${newResponse.statusText}`;\n          window.alert(message);\n          return;\n        } //je fais une requete sur le nouveau pseudo pour etre sur qu'il n'existe pas\n        const newUsers = await newResponse.json();\n        if (newUsers) {\n          window.alert(`le pseudo : ${newPseudo} existe deja`);\n          return;\n        } //si il n'existe pas j'envoie les modifs\n        else {\n          event.preventDefault();\n          newForm.pseudo = newPseudo;\n          newForm.mdp = form.mdp;\n          const modifPerson = {\n            ...newForm\n          };\n          await fetch(`http://localhost:5000/update/${form.pseudo}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(modifPerson)\n          }).catch(error => {\n            window.alert(error);\n            return;\n          });\n          setNewForm({\n            pseudo: \"\",\n            mdp: \"\"\n          });\n          login(newPseudo);\n          navigate('/Profil');\n        }\n      } else {\n        alert(\"Le nouveau pseudo doit etre different que l'ancien\");\n        return;\n      }\n    }\n    //on affiche la bonne alerte pour que l'utilisateur corrige l'erreure \n    else {\n      alert(\"Vous devez inscrire un pseudo\");\n      return;\n    }\n  }\n  ;\n\n  //fonction de changement de mdp\n  async function modifPass(event) {\n    const pseudo = getUser();\n    const response = await fetch(`http://localhost:5000/users/${pseudo}`);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const users = await response.json();\n    if (!users) {\n      window.alert(`Record with pseudo ${pseudo} not found`);\n      return;\n    }\n    if (oldPass !== \"\" && verifPass !== \"\" && newPass !== \"\") {\n      //si tout les champs sont pleins\n      if (oldPass === users.mdp) {\n        //si le mdp tapé et le mdp actuel du profil sont equivalents\n        if (verifPass === newPass) {\n          //si 2 les new mdp sont equivalents\n          if (newPass !== oldPass) {\n            //si le newmdp et le old mdp sont bien differents\n            event.preventDefault();\n            newForm.pseudo = form.pseudo;\n            newForm.mdp = newPass;\n            const modifPerson = {\n              ...newForm\n            };\n            await fetch(`http://localhost:5000/update/${form.pseudo}`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(modifPerson)\n            }).catch(error => {\n              window.alert(error);\n              return;\n            });\n            setNewForm({\n              pseudo: \"\",\n              mdp: \"\"\n            });\n            navigate('/Profil');\n          } else {\n            alert(\"Le nouveau mot de passe doit etre different du precedent\");\n            return;\n          }\n        } else {\n          alert(\"La verification du mot de passe ne correspond pas au nouveau mot de passe\");\n          return;\n        }\n      } else {\n        alert(\"Votre mot de passe est incorrect\");\n        return;\n      }\n    }\n    //on affiche la bonne alerte pour que l'utilisateur corrige l'erreure \n    else {\n      alert(\"Tout les champs doivent être remplis\");\n      return;\n    }\n  }\n  ;\n\n  //fonction de deconnexion\n  async function deconnexion() {\n    logout();\n    navigate('/');\n  }\n  ;\n\n  //fonction de récupération dynamique des données dans la bd afin d'afficher le pseudo\n  const params = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      const pseudo = getUser();\n      const response = await fetch(`http://localhost:5000/users/${pseudo}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const users = await response.json();\n      if (!users) {\n        window.alert(`Record with pseudo ${pseudo} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(users);\n    }\n    fetchData();\n    return;\n  }, [params.pseudo, navigate]);\n\n  //formulaire et titre afficher sur la page \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Douapolis\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"nom joueur\",\n            children: form.pseudo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Modifier mon Pseudo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Nouveau Pseudo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: newPseudo,\n                  onChange: e => setNewPseudo(e.target.value),\n                  placeholder: \"Entrez votre nouveau pseudo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Le nouveau pseudo ne doit pas d\\xE9j\\xE0 exister.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  onClick: modifPseudo,\n                  className: \"button\",\n                  children: \" Envoyer \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Modifier mon Mot de Passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Ancien Mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"mb-3\",\n                  type: \"password\",\n                  value: oldPass,\n                  onChange: e => setOldPass(e.target.value),\n                  placeholder: \"Entrez votre nouveau mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Nouveau Mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"mb-3\",\n                  type: \"password\",\n                  value: newPass,\n                  onChange: e => setNewPass(e.target.value),\n                  placeholder: \"Entrez votre nouveau mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirmation nouveau Mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: verifPass,\n                  onChange: e => setVerifPass(e.target.value),\n                  placeholder: \"Validez votre ancien mot de passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"L'ancien mot de passe doit \\xEAtre diff\\xE9rent du nouveau.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  onClick: modifPass,\n                  className: \"button\",\n                  children: \" Envoyer \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: deconnexion,\n          className: \"button\",\n          children: \" D\\xE9connexion \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n_s(Profil, \"QqvspEl5+O80rsR4Pn67tshhcsQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Profil;\nvar _c;\n$RefreshReg$(_c, \"Profil\");","map":{"version":3,"names":["Container","Button","Accordion","Form","useState","React","useEffect","useParams","useNavigate","Navigation","getUser","logout","login","jsxDEV","_jsxDEV","Profil","_s","form","setForm","pseudo","mdp","newForm","setNewForm","oldPass","setOldPass","newPass","setNewPass","verifPass","setVerifPass","newPseudo","setNewPseudo","navigate","modifPseudo","event","response","fetch","ok","message","statusText","window","alert","users","json","newResponse","newUsers","preventDefault","modifPerson","method","headers","body","JSON","stringify","catch","error","modifPass","deconnexion","params","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","defaultActiveKey","Item","eventKey","Header","Body","Group","Label","Control","type","onChange","e","target","value","placeholder","Text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/clair/Desktop/cours/l3-informatique/printemps/Douapolis/lifprojet/douapolis/src/Parametres.js"],"sourcesContent":["import {Container,Button,Accordion,Form} from \"react-bootstrap\";\r\nimport {useState, React,useEffect} from 'react';\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport Navigation from \"./Navigation\";\r\nimport { getUser,logout,login} from \"./testAuth/AuthApi\";\r\n\r\n//page de profil d'un utilisateur\r\nexport default function Profil() {\r\n    //formulaire pour mon useEffect pour afficher le pseudo dynamiquement\r\n    const [form, setForm] = useState({\r\n        pseudo: \"\",\r\n        mdp: \"\",\r\n    });\r\n    //formulaire qui se rempli lors du changement du mdp ou du pseudo\r\n    const [newForm, setNewForm] = useState({\r\n        pseudo: \"\",\r\n        mdp: \"\",\r\n    });\r\n    //mes constantes et leurs setteurs appelée dans les inputs (type + remplissage avec onChange)\r\n    const [oldPass,setOldPass] = useState('');\r\n    const [newPass,setNewPass] = useState('');\r\n    const [verifPass,setVerifPass] = useState('');\r\n    const [newPseudo, setNewPseudo] = useState('');\r\n    //constante de navigation\r\n    const navigate = useNavigate();\r\n    //constantes pour l'alerte de confirmation\r\n\r\n    //fonction de changement de pseudo\r\n    async function modifPseudo(event){\r\n        const pseudo = getUser();\r\n        const response = await fetch(`http://localhost:5000/users/${pseudo}`);\r\n        if (!response.ok) {\r\n            const message = `An error has occurred: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n        }\r\n        const users = await response.json();\r\n        if (!users) {\r\n            window.alert(`le compte ${pseudo} est introuvable`);\r\n            return;\r\n        }\r\n        if(newPseudo !== \"\") { //si tout les champs sont pleins\r\n\r\n            if(newPseudo !== users.pseudo){ //si le mdp tapé et le mdp actuel du profil sont equivalents\r\n                const newResponse = await fetch(`http://localhost:5000/users/${newPseudo}`);\r\n                if (!newResponse.ok) {\r\n                    const message = `An error has occurred: ${newResponse.statusText}`;\r\n                    window.alert(message);\r\n                    return;\r\n                }//je fais une requete sur le nouveau pseudo pour etre sur qu'il n'existe pas\r\n                const newUsers = await newResponse.json();\r\n                if (newUsers) {\r\n                    window.alert(`le pseudo : ${newPseudo} existe deja`);\r\n                    return;\r\n                }//si il n'existe pas j'envoie les modifs\r\n                else{\r\n                    event.preventDefault();\r\n                    newForm.pseudo = newPseudo;\r\n                    newForm.mdp = form.mdp;\r\n                    const modifPerson = { ...newForm };\r\n                    await fetch(`http://localhost:5000/update/${form.pseudo}`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify(modifPerson),\r\n                    })\r\n                    .catch(error => {\r\n                        window.alert(error);\r\n                        return;\r\n                    });\r\n                    setNewForm({ pseudo: \"\", mdp: \"\" });\r\n                    login(newPseudo);\r\n                    navigate('/Profil');\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Le nouveau pseudo doit etre different que l'ancien\");\r\n                return;\r\n            }\r\n        }\r\n        //on affiche la bonne alerte pour que l'utilisateur corrige l'erreure \r\n        else{\r\n            alert(\"Vous devez inscrire un pseudo\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    //fonction de changement de mdp\r\n    async function modifPass(event){\r\n        const pseudo = getUser();\r\n        const response = await fetch(`http://localhost:5000/users/${pseudo}`);\r\n        if (!response.ok) {\r\n            const message = `An error has occurred: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n        }\r\n        const users = await response.json();\r\n        if (!users) {\r\n            window.alert(`Record with pseudo ${pseudo} not found`);\r\n            return;\r\n        }\r\n        if(oldPass !== \"\" && verifPass !== \"\" && newPass !== \"\") { //si tout les champs sont pleins\r\n            if(oldPass === users.mdp){ //si le mdp tapé et le mdp actuel du profil sont equivalents\r\n                if(verifPass === newPass){ //si 2 les new mdp sont equivalents\r\n                    if(newPass !== oldPass){ //si le newmdp et le old mdp sont bien differents\r\n                        event.preventDefault();\r\n                        newForm.pseudo = form.pseudo;\r\n                        newForm.mdp = newPass;\r\n                        const modifPerson = { ...newForm };\r\n                        await fetch(`http://localhost:5000/update/${form.pseudo}`, {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify(modifPerson),\r\n                        })\r\n                        .catch(error => {\r\n                            window.alert(error);\r\n                            return;\r\n                        });\r\n                        setNewForm({ pseudo: \"\", mdp: \"\" });\r\n                        navigate('/Profil');\r\n                    }\r\n                    else{\r\n                        alert(\"Le nouveau mot de passe doit etre different du precedent\");\r\n                        return;\r\n                    }\r\n                }\r\n                else{\r\n                    alert(\"La verification du mot de passe ne correspond pas au nouveau mot de passe\");\r\n                    return;\r\n                }\r\n            }\r\n            else{\r\n                alert(\"Votre mot de passe est incorrect\");\r\n                return;\r\n            }\r\n        }\r\n        //on affiche la bonne alerte pour que l'utilisateur corrige l'erreure \r\n        else{\r\n            alert(\"Tout les champs doivent être remplis\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    //fonction de deconnexion\r\n    async function deconnexion(){\r\n      logout();\r\n      navigate('/');\r\n    };\r\n\r\n    //fonction de récupération dynamique des données dans la bd afin d'afficher le pseudo\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n          const pseudo = getUser();\r\n          const response = await fetch(`http://localhost:5000/users/${pseudo}`);\r\n      \r\n          if (!response.ok) {\r\n            const message = `An error has occurred: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n          }\r\n      \r\n          const users = await response.json();\r\n          if (!users) {\r\n            window.alert(`Record with pseudo ${pseudo} not found`);\r\n            navigate(\"/\");\r\n            return;\r\n          }\r\n          setForm(users);\r\n        }\r\n        fetchData();\r\n        return;\r\n    }, [params.pseudo, navigate]);\r\n\r\n    //formulaire et titre afficher sur la page \r\n    return(\r\n        <div className=\"body\">\r\n            <Navigation/> \r\n            <Container>\r\n                <div className=\"Douapolis\">\r\n                    <center><h1 id=\"nom joueur\">{form.pseudo}</h1></center>\r\n                </div>\r\n                <div>\r\n                    <Accordion defaultActiveKey=\"\">\r\n                        <Accordion.Item eventKey='0'>\r\n                            <Accordion.Header>\r\n                                Modifier mon Pseudo\r\n                            </Accordion.Header>\r\n                            <Accordion.Body>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nouveau Pseudo</Form.Label>\r\n                                    <Form.Control type={newPseudo} onChange={e => setNewPseudo(e.target.value)} placeholder=\"Entrez votre nouveau pseudo\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        Le nouveau pseudo ne doit pas déjà exister.\r\n                                    </Form.Text><br/>\r\n                                    <Button type=\"submit\" onClick={modifPseudo} className='button'> Envoyer </Button>\r\n                                </Form.Group>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey='1'>\r\n                            <Accordion.Header>\r\n                                Modifier mon Mot de Passe\r\n                            </Accordion.Header>\r\n                            <Accordion.Body>\r\n                                <Form.Group>\r\n                                    <Form.Label>Ancien Mot de passe</Form.Label>\r\n                                    <Form.Control className=\"mb-3\" type=\"password\" value={oldPass} onChange={e => setOldPass(e.target.value)} placeholder=\"Entrez votre nouveau mot de passe\" />\r\n                                    <Form.Label>Nouveau Mot de passe</Form.Label>\r\n                                    <Form.Control className=\"mb-3\" type=\"password\" value={newPass} onChange={e => setNewPass(e.target.value)} placeholder=\"Entrez votre nouveau mot de passe\" />\r\n                                    <Form.Label>Confirmation nouveau Mot de passe</Form.Label>\r\n                                    <Form.Control type=\"password\" value={verifPass} onChange={e => setVerifPass(e.target.value)} placeholder=\"Validez votre ancien mot de passe\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        L'ancien mot de passe doit être différent du nouveau.\r\n                                    </Form.Text><br/>\r\n                                    <Button type=\"submit\" onClick={modifPass} className='button'> Envoyer </Button>\r\n                                </Form.Group>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                        <Button type=\"submit\" onClick={deconnexion} className='button'> Déconnexion </Button>\r\n                    </div>\r\n            </Container>\r\n\t\t</div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}